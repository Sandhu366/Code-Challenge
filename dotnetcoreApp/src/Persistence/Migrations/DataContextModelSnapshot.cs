// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Remark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("ShoutId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShoutId");

                    b.ToTable("Remarks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Let's do it",
                            ShoutId = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = "Yay!!!!!!",
                            ShoutId = 1
                        },
                        new
                        {
                            Id = 3,
                            Body = "NAY!!!!!!!!!",
                            ShoutId = 1
                        },
                        new
                        {
                            Id = 4,
                            Body = "Let's go to night watch!",
                            ShoutId = 2
                        },
                        new
                        {
                            Id = 5,
                            Body = "You know nothing John snow!",
                            ShoutId = 2
                        },
                        new
                        {
                            Id = 6,
                            Body = "King in the north!",
                            ShoutId = 2
                        });
                });

            modelBuilder.Entity("Domain.Shout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Downvotes")
                        .HasColumnType("int");

                    b.Property<int>("Upvotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Shout out loud!",
                            Downvotes = 2000,
                            Upvotes = 5000
                        },
                        new
                        {
                            Id = 2,
                            Body = "Winter is coming!",
                            Downvotes = 120,
                            Upvotes = 1200
                        });
                });

            modelBuilder.Entity("Domain.Remark", b =>
                {
                    b.HasOne("Domain.Shout", "Shout")
                        .WithMany("Remarks")
                        .HasForeignKey("ShoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shout");
                });

            modelBuilder.Entity("Domain.Shout", b =>
                {
                    b.Navigation("Remarks");
                });
#pragma warning restore 612, 618
        }
    }
}
